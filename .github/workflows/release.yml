# Terraform Provider release workflow.
name: Release

# This GitHub action creates a release when a tag that matches the pattern
# "v*" (e.g. v0.1.0) is created.
on:
  push:
    branches:
      - main

# Releases need permissions to read and write the repository contents.
# GitHub considers creating releases and uploading assets as writing contents.
permissions:
  contents: write

jobs:
  determine_version_bump:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      bump: ${{ steps.set-bump.outputs.bump }}
    steps:
      - name: Check PR for release tags
        id: set-bump
        run: |
          if echo "${{ github.event.pull_request.labels.*.name }}" | grep -q "release:major"; then
            echo "::set-output name=bump::major"
          elif echo "${{ github.event.pull_request.labels.*.name }}" | grep -q "release:minor"; then
            echo "::set-output name=bump::minor"
          else
            echo "::set-output name=bump::patch"
          fi

  goreleaser:
    needs: [determine_version_bump]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          # Allow goreleaser to access older tag information.
          fetch-depth: 0
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@82a020f1f7f605c65dd2449b392a52c3fcfef7ef # v6.0.0
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8 # v5.0.0
        with:
          args: release --clean
        env:
          # GitHub sets the GITHUB_TOKEN secret automatically.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}

  release-on-push:
    needs: [determine_version_bump]
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - id: release
        uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: ${{ needs.determine_version_bump.outputs.bump }}
          tag_prefix: v
